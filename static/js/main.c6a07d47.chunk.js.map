{"version":3,"sources":["components/PokemonContext.jsx","components/PokemonCard.jsx","components/PokemonList.jsx","components/Pagination.jsx","App.js","reportWebVitals.js","index.js"],"names":["PokemonContext","createContext","PokemonProvider","props","useState","pokemons","setPokemons","providerValue","capturedPokemons","setCapturedPokemons","Provider","value","children","PokemonCard","id","image","name","type","weight","height","ability","style","_callback","useContext","className","src","alt","PokemonList","pokemon","map","pokemonStats","index","sprites","other","dream_world","front_default","types","abilities","Pagination","goToNextPage","goToPrevPage","onClick","App","allPokemon","setAllPokemon","currentPageUrl","setCurrentPageUrl","nextPageUrl","setNextPageUrl","prevPageUrl","setPrevPageUrl","loading","setLoading","useEffect","cancel","axios","get","cancelToken","CancelToken","c","then","res","data","next","previous","results","forEach","currentList","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c6a07d47.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react';\r\n\r\nexport const PokemonContext = createContext();\r\n\r\nexport const PokemonProvider = (props) => {\r\n  const [pokemons, setPokemons] = useState([]);\r\n\r\n  const [capturedPokemons, setCapturedPokemons] = useState([]);\r\n\r\n  const providerValue = {\r\n    pokemons,\r\n    setPokemons,\r\n    capturedPokemons,\r\n    setCapturedPokemons\r\n  };\r\n\r\n  return (\r\n    <PokemonContext.Provider value={providerValue}>\r\n      {props.children}\r\n    </PokemonContext.Provider>\r\n  )\r\n};","import React ,{useContext} from \"react\";\r\nimport { PokemonContext } from \"./PokemonContext\";\r\n\r\n\r\nconst PokemonCard = ({\r\n  id,\r\n  image,\r\n  name,\r\n  type,\r\n  weight,\r\n  height,\r\n  ability,\r\n  _callback,\r\n}) => {\r\n  const style = type + \" thumb-container\";\r\n  useContext(PokemonContext)\r\n\r\n  return (\r\n    <div className={style}>\r\n      <div className=\"number\">\r\n        <small>#0{id}</small>\r\n      </div>\r\n      <img src={image} alt={name} />\r\n      <div className=\"detail-wrapper\">\r\n        <h3>{name}</h3>\r\n        <small>Type: {type}</small>\r\n        <div className=\"Card__data Card__data--weight\">\r\n          <p className=\"title\">\r\n            Weight : {weight}  <br/><br/>\r\n            Height :{height} <br/><br/>\r\n            Ability : {ability} <br />\r\n            <br />{\" \"}\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <button> CAPTURE POKEMON</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokemonCard;\r\n","import React from 'react'\r\nimport PokemonCard from './PokemonCard'\r\n\r\nconst PokemonList = ({pokemon}) => {\r\n    return (\r\n        <div className='all-container'>\r\n             {pokemon.map( (pokemonStats, index) => \r\n             //Generate all PokemonCard components in a list\r\n            <PokemonCard\r\n            // Retrieve desired information, as documented in the API \r\n              key={index}\r\n              pokemonStats = {pokemonStats}\r\n              id={pokemonStats.id}\r\n              image={pokemonStats.sprites.other.dream_world.front_default}\r\n              name={pokemonStats.name}\r\n              type={pokemonStats.types[0].type.name}\r\n              weight = {pokemonStats.weight}\r\n              height = {pokemonStats.height}\r\n              ability = {pokemonStats.abilities[0].ability.name}\r\n            />\r\n            )}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PokemonList\r\n","import React from 'react'\r\n\r\nconst Pagination = ({ goToNextPage, goToPrevPage }) => {\r\n    return (\r\n        <div>\r\n            { goToPrevPage && <button onClick={goToPrevPage}> Previous </button> }\r\n            { goToNextPage && <button onClick={goToNextPage}> Next </button> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pagination\r\n","import React, {useState, useEffect} from 'react'\nimport './App.css';\nimport axios from 'axios'\nimport PokemonList from './components/PokemonList';\nimport Pagination from './components/Pagination';\nimport { PokemonProvider } from './components/PokemonContext';\n\nfunction App() {\n  const [allPokemon, setAllPokemon] = useState([]) //initialize array to store pokemon\n  const [currentPageUrl, setCurrentPageUrl ] = useState(\"https://pokeapi.co/api/v2/pokemon?limit=20\") //Start with initial page\n  const [nextPageUrl, setNextPageUrl] = useState()\n  const [prevPageUrl, setPrevPageUrl] = useState()\n  const [loading, setLoading] = useState(true) //display something while loading pokemon from API\n\n  //Useffect for loading the data from API\n  useEffect( ()=>{\n    setLoading(true) \n    let cancel \n    axios.get(currentPageUrl, {\n      cancelToken: new axios.CancelToken( c=> cancel = c) //Clear request using axios clear Token\n    }).then(res => {\n      setLoading(false) //Don't show loading component\n      setNextPageUrl(res.data.next) //Update states for Next and previous\n      setPrevPageUrl(res.data.previous)\n      const data = res.data\n      \n      return data\n      // const data = results.json()\n    })\n    //Chain another .then() to use the data from the last response\n    .then( res => {\n      setAllPokemon([]) // delete old page info\n        res.results.forEach(  pokemon => {\n          axios.get(`https://pokeapi.co/api/v2/pokemon/${pokemon.name}`) //get information for each pokemon\n          .then( res => {\n            const data = res.data\n            setAllPokemon( currentList => [...currentList, data]) //store in allPokemon array\n            // allPokemon.sort((a, b) => a.id - b.id) //OPTIONAL SORTING (would slow down program)\n            \n          })\n        })\n    }) \n    return () => cancel()\n  }, [currentPageUrl]) //call useEffect upon pageUrl change\n\n  function goToNextPage() {\n    setCurrentPageUrl(nextPageUrl)\n  }\n  function goToPrevPage() {\n    setCurrentPageUrl(prevPageUrl)\n  }\n  {if (loading) return 'LOADING...'} //to see loading \n  return (\n    //add a context provider to communicate states between component\n    <PokemonProvider> \n    <div className=\"app-container\">\n      <h1>Pokedex</h1>  \n      {/* Pass down functions go children */}\n       <Pagination \n          goToNextPage={nextPageUrl? goToNextPage: null} \n          goToPrevPage={prevPageUrl? goToPrevPage: null}/>  \n\n      <div className=\"pokemon-container\">\n        {/* Call the PokemonList component */}\n        <PokemonList pokemon={allPokemon}/>  \n\n          <Pagination \n          goToNextPage={nextPageUrl? goToNextPage: null} \n          goToPrevPage={prevPageUrl? goToPrevPage: null}/>\n      </div>\n\n    </div>\n    </PokemonProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}